#!/usr/bin/python
import numpy as np
import cv2

# size 700*700
number_detect_phantomjs = { 0:   [[21, 28], [22, 29],
                                  [25, 29], [26, 28],
                                  [25, 29], [22, 29],
                                  [27, 26], [20, 26],
                                  [27, 21], [20, 21],
                                  [22, 18], [21, 19],
                                  [22, 18], [25, 18],
                                  [26, 19], [25, 18]],

                            1:   [24, 18],

                            2:   [[20, 29], [21, 29],
                                  [26, 24], [24, 26],
                                  [25, 18], [27, 20],
                                  [27, 22], [27, 20],
                                  [22, 18]],

                            3:   [[24, 29], [21, 29],
                                  [22, 29], [26, 28],
                                  [26, 23], [24, 22],
                                  [26, 18]],

                            4:   [[26, 27],
                                  [27, 27],[20, 26],
                                  [24, 21],[22, 23],
                                  [26, 18],[26, 19]],

                            5:   [[24, 29], [21, 29],
                                  [22, 29], [26, 28],
                                  [26, 23], [21, 22],
                                  [24, 22], [21, 18]],

                            6:   [[26, 23], [27, 24],
                                  [27, 27], [25, 29],
                                  [27, 27], [27, 24],
                                  [23, 22], [24, 22],
                                  [20, 22], [20, 27],
                                  [22, 29], [20, 27],
                                  [20, 24], [21, 23],
                                  [23, 18], [21, 20],
                                  [23, 18], [24, 18]],

                            7:   [[22, 29], [23, 27],
                                  [24, 24], [24, 25],
                                  [25, 22], [26, 20],
                                  [26, 18]],

                            8:   [[27, 25], [27, 27],
                                  [25, 29], [27, 27],
                                  [20, 25], [20, 27],
                                  [22, 29], [20, 27],
                                  [22, 21], [22, 22],
                                  [21, 23], [22, 22],
                                  [25, 22], [26, 23],
                                  [25, 22], [25, 21],
                                  [24, 22], [23, 22],
                                  [25, 18], [22, 18]],

                            9:   [[26, 27], [24, 29],
                                  [23, 29], [24, 29],
                                  [23, 25], [24, 25],
                                  [25, 18], [27, 20],
                                  [27, 23], [26, 24],
                                  [27, 25], [27, 20],
                                  [22, 18], [20, 20],
                                  [20, 23], [21, 24],
                                  [20, 23], [20, 20]]
                          }

# size 1600*900
number_detect_firefox = { 0:   [[23, 22], [24, 22],
                                [25, 23], [25, 28],
                                [23, 30], [22, 29],
                                [22, 28], [21, 27],
                                [21, 24], [22, 21],
                                [21, 22], [21, 24],
                                [20, 25], [20, 26],
                                [21, 27], [21, 29],
                                [22, 30], [25, 30],
                                [26, 29], [26, 23],
                                [25, 22], [25, 21]],



                          1:   [[23, 23], [20, 26],
                                [22, 26], [23, 27],
                                [23, 32], [24, 32],
                                [24, 23]],


                          2:   [[22, 22], [21, 23],
                                [21, 24], [22, 24],
                                [23, 23], [24, 23],
                                [25, 24], [25, 25],
                                [24, 26], [24, 27],
                                [21, 30], [21, 31],
                                [26, 31], [26, 30],
                                [24, 30], [23, 29],
                                [26, 26], [26, 23],
                                [25, 22]],



                           3:   [[21, 21], [21, 23],
                                 [22, 22], [23, 22],
                                 [24, 23], [24, 24],
                                 [23, 25], [24, 26],
                                 [24, 29], [23, 30],
                                 [21, 28], [20, 28],
                                 [20, 29], [21, 30],
                                 [25, 30], [25, 29],
                                 [26, 28], [26, 27],
                                 [24, 25], [25, 24],
                                 [25, 22], [24, 21]],



                           4:   [[22, 25], [23, 26],
                                 [23, 27], [22, 28],
                                 [21, 28], [20, 27],
                                 [23, 22], [22, 23],
                                 [22, 24], [20, 26],
                                 [20, 27], [19, 28],
                                 [19, 29], [22, 29],
                                 [23, 30], [23, 31],
                                 [24, 31], [24, 30],
                                 [25, 29], [25, 28],
                                 [24, 27], [24, 22]],


                           5:   [[21, 22], [21, 23],
                                 [20, 24], [20, 27],
                                 [23, 27], [24, 28],
                                 [24, 30], [23, 31],
                                 [22, 31], [21, 30],
                                 [21, 29], [20, 29],
                                 [20, 31], [24, 31],
                                 [25, 30], [25, 27],
                                 [24, 26], [22, 26],
                                 [21, 25], [21, 24],
                                 [22, 23], [25, 23],
                                 [25, 22]],


                           6:   [[21, 28], [22, 27],
                                 [24, 27], [25, 28],
                                 [25, 29], [23, 31],
                                 [21, 29], [22, 22],
                                 [20, 24], [20, 29],
                                 [21, 30], [21, 31],
                                 [25, 31], [26, 30],
                                 [26, 27], [25, 26],
                                 [22, 26], [21, 25],
                                 [21, 24], [22, 23],
                                 [24, 23], [25, 24],
                                 [25, 22]],


                           7:   [[21, 22], [20, 23],
                                 [23, 23], [24, 24],
                                 [24, 25], [23, 26],
                                 [23, 28], [22, 29],
                                 [22, 31], [23, 31],
                                 [23, 28], [24, 27],
                                 [24, 26], [26, 24],
                                 [26, 22]],


                           8:   [[21, 28], [22, 27],
                                 [23, 27], [24, 28],
                                 [24, 30], [23, 31],
                                 [22, 31], [21, 30],
                                 [21, 24], [22, 23],
                                 [23, 23], [24, 24],
                                 [24, 25], [23, 26],
                                 [22, 26], [21, 25],
                                 [21, 22], [20, 23],
                                 [20, 25], [21, 26],
                                 [20, 27], [20, 31],
                                 [25, 31], [25, 27],
                                 [24, 26], [25, 25],
                                 [25, 23], [24, 22]],



                           9:   [[21, 24], [22, 23],
                                 [23, 23], [25, 25],
                                 [23, 27], [21, 25],
                                 [21, 22], [20, 23],
                                 [20, 26], [22, 28],
                                 [23, 28], [24, 29],
                                 [24, 30], [23, 31],
                                 [22, 30], [21, 30],
                                 [21, 31], [24, 31],
                                 [25, 30], [25, 29],
                                 [26, 28], [26, 25],
                                 [25, 24], [25, 23],
                                 [24, 22]]
                        }

def calcule_image(images_input, number_check, listes):
    img = cv2.imread('images/Downloads/{}'.format(images_input))
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    ret, thresh = cv2.threshold(gray,127,255,1)

    _, contours, h = cv2.findContours(thresh,1,2)
    try:
        contours = np.vstack(contours).squeeze()
    except ValueError:
        if number_check == None or number_check == -1:
            return False
        else:
            return False

    b = contours.tolist()
    #print(b)
    if number_check >= 0 and number_check <= 9:
        a = listes[number_check]
        try:
            accuracy = len([a[i] for i in range(0, len(a)) if a[i] == b[i]]) / len(a)
            if accuracy >= 0.8:
                return accuracy
        except:
            return False
    #return False
    #accuracy = correct.sum() / correct.size


'''
listes = [(x, y) for x in range(0, 15) for y in range(0, 10)]
for i, a in listes:
    try:
        calcl = calcule_image("cel_{}.png".format(i), a, number_detect_firefox)
        if calcl:
            print(calcl, i, a)
    except:
        pass
'''
#normalize_image("cel_0.png")

#print(calcule_image("cel_{}.png".format(14), 6, number_detect_firefox))
